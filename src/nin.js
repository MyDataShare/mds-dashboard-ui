/* eslint-disable max-classes-per-file */
class NationalIdNumber {
  constructor(nin) {
    this.nin = nin;
    NationalIdNumber.validate(this.nin);
  }

  /**
   * Check if given National Identification Number is valid.
   *
   * Runs both format validation and possible additional validations like checksum checks.
   *
   * @param {string} nin
   * @returns {boolean}
   */
  static validate(nin) {
    return this.isPatternValid(nin) && this.calc(nin);
  }

  /**
   * Check if given National Identification Number passes regular expression validation.
   *
   * @param {string} nin
   * @returns {boolean}
   */
  static isPatternValid(nin) {
    return !!nin.match(this.pattern);
  }

  /**
   * Check if given National Identification Number passes additional validations like checksum
   * checks.
   *
   * @param {string} nin
   * @returns {boolean}
   */
  static calc(nin) {
    return !!nin;
  }
}

NationalIdNumber.pattern = null;

/**
 * GYYMMDDNNNC, where
 *   * G shows the person's sex and century of birth (odd number male, even number female,
 *     1-2 19th century, 3-4 20th century, 5-6 21st century)
 *   * YYMMDD is the person's date of birth
 *   * NNN is a serial number separating persons born on the same date
 *   * C is a checksum digit
 */
export class Estonia extends NationalIdNumber {}
Estonia.pattern =
  /^[1-6][0-9]{2}(01|02|03|04|05|06|07|08|09|10|11|12)((0[1-9])|([12])[0-9]|(30|31))[0-9]{4}$/;

export class Finland extends NationalIdNumber {
  static calc(nin) {
    const chars = '0123456789ABCDEFHJKLMNPRSTUVWXY';
    const remainder = parseInt(nin.slice(0, 6) + nin.slice(7, 10), 10) % 31;
    const expectedControl = chars.charAt(remainder);
    return nin.slice(-1) === expectedControl;
  }
}
Finland.pattern =
  /^((0[1-9])|([12])[0-9]|(30|31))(01|02|03|04|05|06|07|08|09|10|11|12)[0-9]{2}[-+ABCDEFUVWXY][0-9]{3}[0-9ABCDEFHJKLMNPRSTUVWXY]$/i;

/**
 * New format (https://likumi.lv/ta/en/en/id/49641):
 *   The personal identity number shall consist of eleven digits, ensuring that the personal
 *   identity numbers are not duplicated. The first digits of the personal identity number
 *   are "32", while the remaining digits are random digits between "0" to "9" automatically
 *   generated by the system. The first six digits may be separated from the other five digits
 *   with a hyphen.
 *
 *   The old format has the same number of digits. New format is identified by the starting
 *   characters 32.
 */
export class Latvia extends NationalIdNumber {}
Latvia.pattern =
  /^((32[0-9]{4}-?[0-9]{5})|(((0[1-9])|([12])[0-9]|(30|31))(01|02|03|04|05|06|07|08|09|10|11|12)[0-9]{2})-?[0-2][0-9]{4})$/;

export class Lithuania extends Estonia {}

export class Sweden extends NationalIdNumber {}
Sweden.pattern =
  /^(18|19|20)?[0-9]{2}(01|02|03|04|05|06|07|08|09|10|11|12)((0[1-9])|([12])[0-9]|(30|31))([-+])[0-9]{4}$/;
